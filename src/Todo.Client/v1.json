{
  "x-generator": "NSwag v14.1.0.0 (NJsonSchema v11.0.2.0 (Newtonsoft.Json v13.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "Todo API",
    "version": "v1"
  },
  "paths": {
    "/v1/tenant/{tenantId}/todo": {
      "post": {
        "tags": [
          "Tenant"
        ],
        "summary": "Create TodoItem",
        "description": "Create a new TodoItem",
        "operationId": "CreateTodoItemEndpoint",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "x-name": "CreateTodoItemRequest",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTodoItemRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateTodoItemResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Tenant"
        ],
        "summary": "List TodoItems",
        "description": "List and filter TodoItems",
        "operationId": "ListTodoItemsEndpoint",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "paginationToken",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "isCompleted",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListTodoItemsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/tenant/{tenantId}/todo/{todoItemId}": {
      "delete": {
        "tags": [
          "Tenant"
        ],
        "summary": "Delete TodoItem",
        "description": "Delete a TodoItem",
        "operationId": "DeleteTodoItemEndpoint",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "todoItemId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Tenant"
        ],
        "summary": "Get TodoItem",
        "description": "Get a TodoItem",
        "operationId": "GetTodoItemEndpoint",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "todoItemId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTodoItemResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Tenant"
        ],
        "summary": "Update TodoItem",
        "description": "Update a TodoItem",
        "operationId": "UpdateTodoItemEndpoint",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "todoItemId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "x-name": "UpdateTodoItemRequest",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTodoItemRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateTodoItemResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/tenant/{tenantId}/cat": {
      "get": {
        "tags": [
          "Tenant"
        ],
        "summary": "Get a Cat",
        "description": "Returns a friendly cat",
        "operationId": "GetCatEndpoint",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "operationId": "PingEndpoint1",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PingEndpointResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ping": {
      "get": {
        "tags": [
          "Ping"
        ],
        "operationId": "PingEndpoint2",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PingEndpointResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CreateTodoItemResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "todoItem": {
            "$ref": "#/components/schemas/TodoItemDto"
          }
        }
      },
      "TodoItemDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "todoItemId": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "notes": {
            "type": "string"
          },
          "isCompleted": {
            "type": "boolean"
          },
          "tenantId": {
            "type": "string"
          },
          "idempotencyToken": {
            "type": "string"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "description": "the dto used to send an error response to the client",
        "additionalProperties": false,
        "properties": {
          "statusCode": {
            "type": "integer",
            "description": "the http status code sent to the client. default is 400.",
            "format": "int32",
            "default": 400
          },
          "message": {
            "type": "string",
            "description": "the message for the error response",
            "default": "One or more errors occurred!"
          },
          "errors": {
            "type": "object",
            "description": "the collection of errors for the current context",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "ApiErrorResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "errorCode": {
            "type": "string"
          },
          "errorMessage": {
            "type": "string"
          },
          "statusCode": {
            "type": "integer",
            "format": "int32"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiError"
            }
          }
        }
      },
      "ApiError": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "key": {
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "CreateTodoItemRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "title",
          "notes"
        ],
        "properties": {
          "title": {
            "type": "string",
            "maxLength": 100,
            "minLength": 3,
            "nullable": false
          },
          "notes": {
            "type": "string",
            "maxLength": 100,
            "minLength": 3,
            "nullable": false
          },
          "idempotencyToken": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "DeleteTodoItemRequest": {
        "type": "object",
        "additionalProperties": false
      },
      "GetCatResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "meow": {
            "type": "string"
          }
        }
      },
      "GetCatRequest": {
        "type": "object",
        "additionalProperties": false
      },
      "GetTodoItemResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "todoItem": {
            "$ref": "#/components/schemas/TodoItemDto"
          }
        }
      },
      "GetTodoItemRequest": {
        "type": "object",
        "additionalProperties": false
      },
      "ListTodoItemsResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "todoItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TodoItemDto"
            }
          },
          "paginationToken": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ListTodoItemsRequest": {
        "type": "object",
        "additionalProperties": false
      },
      "PingEndpointResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "ok": {
            "type": "boolean"
          }
        }
      },
      "UpdateTodoItemResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "todoItem": {
            "$ref": "#/components/schemas/TodoItemDto"
          }
        }
      },
      "UpdateTodoItemRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "title",
          "notes",
          "isCompleted"
        ],
        "properties": {
          "title": {
            "type": "string",
            "maxLength": 100,
            "minLength": 3,
            "nullable": false
          },
          "notes": {
            "type": "string",
            "maxLength": 100,
            "minLength": 3,
            "nullable": false
          },
          "isCompleted": {
            "type": "boolean",
            "nullable": false
          }
        }
      }
    },
    "securitySchemes": {
      "JWTBearerAuth": {
        "type": "http",
        "description": "Enter a JWT token to authorize the requests...",
        "scheme": "Bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}